var L={afr:"afr_Latn",amh:"amh_Ethi",ara:"arb_Arab",asm:"asm_Beng",ast:"ast_Latn",azj:"azj_Latn",bel:"bel_Cyrl",ben:"ben_Beng",bos:"bos_Latn",bul:"bul_Cyrl",cat:"cat_Latn",ceb:"ceb_Latn",ces:"ces_Latn",ckb:"ckb_Arab",cym:"cym_Latn",dan:"dan_Latn",deu:"deu_Latn",ell:"ell_Grek",eng:"eng_Latn",est:"est_Latn",fin:"fin_Latn",fra:"fra_Latn",ful:"fuv_Latn",gle:"gle_Latn",glg:"glg_Latn",guj:"guj_Gujr",hau:"hau_Latn",heb:"heb_Hebr",hin:"hin_Deva",hrv:"hrv_Latn",hun:"hun_Latn",hye:"hye_Armn",ibo:"ibo_Latn",ind:"ind_Latn",isl:"isl_Latn",ita:"ita_Latn",jav:"jav_Latn",jpn:"jpn_Jpan",kam:"kam_Latn",kan:"kan_Knda",kat:"kat_Geor",kaz:"kaz_Cyrl",khm:"khm_Khmr",kir:"kir_Cyrl",kor:"kor_Hang",lao:"lao_Laoo",Latvian:"lij_Latn",kea:"lim_Latn",lin:"lin_Latn",lit:"lit_Latn",ltz:"ltz_Latn",lug:"lug_Latn",luo:"luo_Latn",lav:"lvs_Latn",mal:"mal_Mlym",mar:"mar_Deva",mkd:"mkd_Cyrl",mlt:"mlt_Latn",mon:"khk_Cyrl",mri:"mri_Latn",mya:"mya_Mymr",nld:"nld_Latn",nob:"nob_Latn",npi:"npi_Deva",nso:"nso_Latn",nya:"nya_Latn",oci:"oci_Latn",orm:"gaz_Latn",ory:"ory_Orya",pan:"pan_Guru",fas:"pes_Arab",pol:"pol_Latn",por:"por_Latn",pus:"pbt_Arab",ron:"ron_Latn",rus:"rus_Cyrl",slk:"slk_Latn",sna:"sna_Latn",snd:"snd_Arab",som:"som_Latn",spa:"spa_Latn",srp:"srp_Cyrl",swe:"swe_Latn",swh:"swh_Latn",tam:"tam_Taml",tel:"tel_Telu",tgk:"tgk_Cyrl",tgl:"tgl_Latn",tha:"tha_Thai",tur:"tur_Latn",ukr:"ukr_Cyrl",umb:"umb_Latn",urd:"urd_Arab",uzb:"uzn_Latn",vie:"vie_Latn",wol:"wol_Latn",xho:"xho_Latn",yor:"yor_Latn",zho_simpl:"zho_Hans",zho_trad:"zho_Hant",msa:"zsm_Latn",zul:"zul_Latn"};var f={afr_Latn:"afr_Latn",amh_Ethi:"amh_Ethi",arb_Arab:"arb_Arab",asm_Beng:"asm_Beng",ast_Latn:"ast_Latn",azj_Latn:"azj_Latn",bel_Cyrl:"bel_Cyrl",ben_Beng:"ben_Beng",bos_Latn:"bos_Latn",bul_Cyrl:"bul_Cyrl",cat_Latn:"cat_Latn",ceb_Latn:"ceb_Latn",ces_Latn:"ces_Latn",ckb_Arab:"ckb_Arab",cym_Latn:"cym_Latn",dan_Latn:"dan_Latn",deu_Latn:"deu_Latn",ell_Grek:"ell_Grek",eng_Latn:"eng_Latn",est_Latn:"est_Latn",fin_Latn:"fin_Latn",fra_Latn:"fra_Latn",fuv_Latn:"fuv_Latn",gle_Latn:"gle_Latn",glg_Latn:"glg_Latn",guj_Gujr:"guj_Gujr",hau_Latn:"hau_Latn",heb_Hebr:"heb_Hebr",hin_Deva:"hin_Deva",hrv_Latn:"hrv_Latn",hun_Latn:"hun_Latn",hye_Armn:"hye_Armn",ibo_Latn:"ibo_Latn",ind_Latn:"ind_Latn",isl_Latn:"isl_Latn",ita_Latn:"ita_Latn",jav_Latn:"jav_Latn",jpn_Jpan:"jpn_Jpan",kam_Latn:"kam_Latn",kan_Knda:"kan_Knda",kat_Geor:"kat_Geor",kaz_Cyrl:"kaz_Cyrl",khm_Khmr:"khm_Khmr",kir_Cyrl:"kir_Cyrl",kor_Hang:"kor_Hang",lao_Laoo:"lao_Laoo",lij_Latn:"lij_Latn",lim_Latn:"lim_Latn",lin_Latn:"lin_Latn",lit_Latn:"lit_Latn",ltz_Latn:"ltz_Latn",lug_Latn:"lug_Latn",luo_Latn:"luo_Latn",lvs_Latn:"lvs_Latn",mal_Mlym:"mal_Mlym",mar_Deva:"mar_Deva",mkd_Cyrl:"mkd_Cyrl",mlt_Latn:"mlt_Latn",khk_Cyrl:"khk_Cyrl",mri_Latn:"mri_Latn",mya_Mymr:"mya_Mymr",nld_Latn:"nld_Latn",nob_Latn:"nob_Latn",npi_Deva:"npi_Deva",nso_Latn:"nso_Latn",nya_Latn:"nya_Latn",oci_Latn:"oci_Latn",gaz_Latn:"gaz_Latn",ory_Orya:"ory_Orya",pan_Guru:"pan_Guru",pes_Arab:"pes_Arab",pol_Latn:"pol_Latn",por_Latn:"por_Latn",pbt_Arab:"pbt_Arab",ron_Latn:"ron_Latn",rus_Cyrl:"rus_Cyrl",slk_Latn:"slk_Latn",sna_Latn:"sna_Latn",snd_Arab:"snd_Arab",som_Latn:"som_Latn",spa_Latn:"spa_Latn",srp_Cyrl:"srp_Cyrl",swe_Latn:"swe_Latn",swh_Latn:"swh_Latn",tam_Taml:"tam_Taml",tel_Telu:"tel_Telu",tgk_Cyrl:"tgk_Cyrl",tgl_Latn:"tgl_Latn",tha_Thai:"tha_Thai",tur_Latn:"tur_Latn",ukr_Cyrl:"ukr_Cyrl",umb_Latn:"umb_Latn",urd_Arab:"urd_Arab",uzn_Latn:"uzn_Latn",vie_Latn:"vie_Latn",wol_Latn:"wol_Latn",xho_Latn:"xho_Latn",yor_Latn:"yor_Latn",zho_Hans:"zho_Hans",zho_Hant:"zho_Hant",zsm_Latn:"zsm_Latn",zul_Latn:"zul_Latn"};var m=[{country:"Afrikaans",iso:"af",flores:"afr_Latn"},{country:"Akan",iso:"ak",flores:"aka_Latn"},{country:"Amharic",iso:"am",flores:"amh_Ethi"},{country:"Arabic",iso:"ar",flores:"arb_Arab"},{country:"Assamese",iso:"as",flores:"asm_Beng"},{country:"Awadhi",iso:"awa",flores:"awa_Deva"},{country:"Aymara",iso:"ay",flores:"ayr_Latn"},{country:"Azerbaijani",iso:"az",flores:"azb_Arab"},{country:"Bashkir",iso:"ba",flores:"bak_Cyrl"},{country:"Bambara",iso:"bm",flores:"bam_Latn"},{country:"Balinese",iso:"ban",flores:"ban_Latn"},{country:"Belarusian",iso:"be",flores:"bel_Cyrl"},{country:"Bemba",iso:"bem",flores:"bem_Latn"},{country:"Bengali",iso:"bn",flores:"ben_Beng"},{country:"Bhojpuri",iso:"bho",flores:"bho_Deva"},{country:"Tibetan",iso:"bo",flores:"bod_Tibt"},{country:"Bosnian",iso:"bs",flores:"bos_Latn"},{country:"Buginese",iso:"bug",flores:"bug_Latn"},{country:"Bulgarian",iso:"bg",flores:"bul_Cyrl"},{country:"Cebuano",iso:"ceb",flores:"ceb_Latn"},{country:"Czech",iso:"cs",flores:"ces_Latn"},{country:"Kurdish",iso:"ku",flores:"ckb_Arab"},{country:"Tatar",iso:"tt",flores:"crh_Latn"},{country:"Welsh",iso:"cy",flores:"cym_Latn"},{country:"Danish",iso:"da",flores:"dan_Latn"},{country:"German",iso:"de",flores:"deu_Latn"},{country:"Dinka",iso:"din",flores:"dik_Latn"},{country:"Dyula",iso:"dyu",flores:"dyu_Latn"},{country:"Dzongkha",iso:"dz",flores:"dzo_Tibt"},{country:"English",iso:"en",flores:"eng_Latn"},{country:"Esperanto",iso:"eo",flores:"epo_Latn"},{country:"Estonian",iso:"et",flores:"est_Latn"},{country:"Basque",iso:"eu",flores:"eus_Latn"},{country:"Ewe",iso:"ee",flores:"ewe_Latn"},{country:"Faroese",iso:"fo",flores:"fao_Latn"},{country:"Fijian",iso:"fj",flores:"fij_Latn"},{country:"Finnish",iso:"fi",flores:"fin_Latn"},{country:"Fon",iso:"fon",flores:"fon_Latn"},{country:"French",iso:"fr",flores:"fra_Latn"},{country:"Friulian",iso:"fur",flores:"fur_Latn"},{country:"Irish",iso:"ga",flores:"gle_Latn"},{country:"Galician",iso:"gl",flores:"glg_Latn"},{country:"Guarani",iso:"gn",flores:"grn_Latn"},{country:"Gujarati",iso:"gu",flores:"guj_Gujr"},{country:"Hausa",iso:"ha",flores:"hau_Latn"},{country:"Hebrew",iso:"he",flores:"heb_Hebr"},{country:"Hindi",iso:"hi",flores:"hin_Deva"},{country:"Croatian",iso:"hr",flores:"hrv_Latn"},{country:"Hungarian",iso:"hu",flores:"hun_Latn"},{country:"Armenian",iso:"hy",flores:"hye_Armn"},{country:"Igbo",iso:"ig",flores:"ibo_Latn"},{country:"Indonesian",iso:"id",flores:"ind_Latn"},{country:"Icelandic",iso:"is",flores:"isl_Latn"},{country:"Italian",iso:"it",flores:"ita_Latn"},{country:"Javanese",iso:"jv",flores:"jav_Latn"},{country:"Japanese",iso:"ja",flores:"jpn_Jpan"},{country:"Kabyle",iso:"kab",flores:"kab_Latn"},{country:"Kamba",iso:"kam",flores:"kam_Latn"},{country:"Kannada",iso:"kn",flores:"kan_Knda"},{country:"Kashmiri",iso:"ks",flores:"kas_Arab"},{country:"Georgian",iso:"ka",flores:"kat_Geor"},{country:"Kanuri",iso:"kr",flores:"knc_Arab"},{country:"Kazakh",iso:"kk",flores:"kaz_Cyrl"},{country:"Kinyarwanda",iso:"rw",flores:"kin_Latn"},{country:"Kimbundu",iso:"kmb",flores:"kmb_Latn"},{country:"Kurdish",iso:"ku",flores:"kmr_Latn"},{country:"Korean",iso:"ko",flores:"kor_Hang"},{country:"Lao",iso:"lo",flores:"lao_Laoo"},{country:"Lingala",iso:"ln",flores:"lin_Latn"},{country:"Lithuanian",iso:"lt",flores:"lit_Latn"},{country:"Ganda",iso:"lg",flores:"lug_Latn"},{country:"Latvian",iso:"lv",flores:"lvs_Latn"},{country:"Magahi",iso:"mag",flores:"mag_Deva"},{country:"Maithili",iso:"mai",flores:"mai_Deva"},{country:"Malayalam",iso:"ml",flores:"mal_Mlym"},{country:"Marathi",iso:"mr",flores:"mar_Deva"},{country:"Minangkabau",iso:"min",flores:"min_Arab"},{country:"Macedonian",iso:"mk",flores:"mkd_Cyrl"},{country:"Maltese",iso:"mt",flores:"mlt_Latn"},{country:"Bengali",iso:"bn",flores:"mni_Beng"},{country:"Mongolian",iso:"mn",flores:"khk_Cyrl"},{country:"Mossi",iso:"mos",flores:"mos_Latn"},{country:"Maori",iso:"mi",flores:"mri_Latn"},{country:"Burmese",iso:"my",flores:"mya_Mymr"},{country:"Norwegian",iso:"no",flores:"nno_Latn"},{country:"Nepali",iso:"ne",flores:"npi_Deva"},{country:"Oromo",iso:"om",flores:"gaz_Latn"},{country:"Pangasinan",iso:"pag",flores:"pag_Latn"},{country:"Papiamento",iso:"pap",flores:"pap_Latn"},{country:"Persian",iso:"fa",flores:"pes_Arab"},{country:"Polish",iso:"pl",flores:"pol_Latn"},{country:"Portuguese",iso:"pt",flores:"por_Latn"},{country:"Quechua",iso:"qu",flores:"quy_Latn"},{country:"Rundi",iso:"rn",flores:"run_Latn"},{country:"Russian",iso:"ru",flores:"rus_Cyrl"},{country:"Sango",iso:"sg",flores:"sag_Latn"},{country:"Sanskrit",iso:"sa",flores:"san_Deva"},{country:"Santali",iso:"sat",flores:"sat_Olck"},{country:"Sicilian",iso:"scn",flores:"scn_Latn"},{country:"Shan",iso:"shn",flores:"shn_Mymr"},{country:"Slovak",iso:"sk",flores:"slk_Latn"},{country:"Slovenian",iso:"sl",flores:"slv_Latn"},{country:"Samoan",iso:"sm",flores:"smo_Latn"},{country:"Shona",iso:"sn",flores:"sna_Latn"},{country:"Sindhi",iso:"sd",flores:"snd_Arab"},{country:"Somali",iso:"so",flores:"som_Latn"},{country:"Albanian",iso:"sq",flores:"als_Latn"},{country:"Sardinian",iso:"sc",flores:"srd_Latn"},{country:"Serbian",iso:"sr",flores:"srp_Cyrl"},{country:"Swati",iso:"ss",flores:"ssw_Latn"},{country:"Sundanese",iso:"su",flores:"sun_Latn"},{country:"Swedish",iso:"sv",flores:"swe_Latn"},{country:"Swahili",iso:"sw",flores:"swh_Latn"},{country:"Tamil",iso:"ta",flores:"tam_Taml"},{country:"Tatar",iso:"tt",flores:"tat_Cyrl"},{country:"Telugu",iso:"te",flores:"tel_Telu"},{country:"Tajik",iso:"tg",flores:"tgk_Cyrl"},{country:"Tagalog",iso:"tl",flores:"tgl_Latn"},{country:"Thai",iso:"th",flores:"tha_Thai"},{country:"Tigrinya",iso:"ti",flores:"tir_Ethi"},{country:"Tok Pisin",iso:"tpi",flores:"tpi_Latn"},{country:"Tswana",iso:"tn",flores:"tsn_Latn"},{country:"Tsonga",iso:"ts",flores:"tso_Latn"},{country:"Turkmen",iso:"tk",flores:"tuk_Latn"},{country:"Tumbuka",iso:"tum",flores:"tum_Latn"},{country:"Turkish",iso:"tr",flores:"tur_Latn"},{country:"Twi",iso:"tw",flores:"twi_Latn"},{country:"Ukrainian",iso:"uk",flores:"ukr_Cyrl"},{country:"Umbundu",iso:"umb",flores:"umb_Latn"},{country:"Urdu",iso:"ur",flores:"urd_Arab"},{country:"Uzbek",iso:"uz",flores:"uzn_Latn"},{country:"Vietnamese",iso:"vi",flores:"vie_Latn"},{country:"Waray",iso:"war",flores:"war_Latn"},{country:"Wolof",iso:"wo",flores:"wol_Latn"},{country:"Xhosa",iso:"xh",flores:"xho_Latn"},{country:"Yiddish",iso:"yi",flores:"ydd_Hebr"},{country:"Yoruba",iso:"yo",flores:"yor_Latn"},{country:"Chinese",iso:"zh",flores:"zho_Hans"},{country:"Chinese",iso:"zho",flores:"zho_Hant"},{country:"Malay",iso:"ms",flores:"zsm_Latn"},{country:"Zulu",iso:"zu",flores:"zul_Latn"}];var h=["facebook/nllb-200-distilled-600M","facebook/nllb-200-distilled-1.3B","facebook/nllb-200-1.3B","facebook/nllb-200-3.3B","facebook/nllb-moe-54b"];import d from"path";import u from"fs";import{spawn as B}from"child_process";var M={win:"where",mac:"which",linux:"which"},D={win:["python","python3"],mac:["python","python3"],linux:["python","python3"]},H={win:"/Scripts",mac:"/bin",linux:"/bin"},G={win:["python.exe","python3.exe","python","python3"],mac:["python","python3"],linux:["python","python3"]};function c(){switch(process.platform){case"win32":return"win";case"darwin":return"mac";case"linux":return"linux";default:throw new Error(`Operating System not suported: ${process.platform}`)}}function _(...n){return new Promise(function(a,t){let o=n.shift();if(!o){t(new Error("Command not found"));return}let r="",i="",s=B(o,n);s.stdout.on("data",function(l){r+=l.toString()}),s.stderr.on("data",function(l){i+=l.toString()}),s.on("error",function(l){t(l)}),s.on("exit",function(l,F){a({stdout:r.length>0?r:void 0,stderr:i.length>0?i:void 0})})})}function P(n){u.existsSync(n)&&u.rmSync(n,{recursive:!0})}async function E(){let n=M[c()];for(let a of D[c()]){let{stdout:t,stderr:o}=await _(n,a);if(t){let r=t.replace(/(\r\n|\r|\n)+/g,`
`).split(`
`).filter(Boolean);return{command:a,path:r[0]}}}}async function g(n){let a=d.join(n,H[c()]);if(u.existsSync(a)){let t=u.readdirSync(a);for(let o of t)if(G[c()].indexOf(o)>-1)return d.join(a,o)}}var b=class{constructor(n){n||(n={}),Object.assign(this,n)}isInitialized(){return!!this.command}async init(n){if(n&&this.destory(),!this.pythonCommand){let a=await E();if(!a)throw new Error("Python environment variable not found");this.pythonCommand=a.command}if(this.venvPath){let a=await g(this.venvPath);if(!a&&(await _(this.pythonCommand,"-m","venv",this.venvPath),a=await g(this.venvPath),!a))throw new Error(`Venv creation failed: ${a}`);this.command=a}else this.command=this.pythonCommand}getCommand(){if(!this.command)throw new Error("PyWrapper not initialized");return this.command}async exec(...n){return await _(this.getCommand(),...n)}async run(...n){let{stdout:a,stderr:t}=await _(this.getCommand(),...n);if(!a&&t)throw new Error(t);return a||""}async version(){return(await this.run("--version")).replace(/\n$/,"")}async freeze(){return await this.run("-m","pip","list","--format=freeze")}async list(){return(await this.freeze()).replace(/(\r\n|\r|\n)+/g,`
`).trim().split(/\n/).map(function(n){let a=n.split(/==| @ /);return{name:a[0],version:a[1]}})}async isInstalled(...n){let a=(await this.list()).map(t=>t.name);for(let t of n)if(a.indexOf(t)===-1)return!1;return!0}async install(...n){return await this.run("-m","pip","install",...n)}async uninstall(...n){return await this.run("-m","pip","uninstall",...n)}destory(){this.venvPath&&P(this.venvPath),delete this.command}};import k from"node:fs";var p=`
import sys
import torch
from transformers import AutoModelForSeq2SeqLM, AutoTokenizer

# Set encoding
sys.stdout.reconfigure(encoding='utf-8')

def main(*args):
  model_name = args[0]
  src_lang = args[1]
  tgt_lang = args[2]
  text = args[3]

  device = "cuda:0" if torch.cuda.is_available() else "cpu"

  tokenizer = AutoTokenizer.from_pretrained(
    model_name, 
    # Default "/USER/.cache/huggingface/hub"
    # cache_dir="./.nllb-200-models", 
    src_lang=src_lang
  )

  # https://github.com/huggingface/transformers/issues/2704
  model = AutoModelForSeq2SeqLM.from_pretrained(
    model_name, 
    # cache_dir="./.nllb-200-models",
  ).to(device)

  inputs = tokenizer(
    text=text, return_tensors="pt"
  ).to(device)
  
  # max_length <= 512
  # Deprecated: tokenizer.lang_code_to_id
  translated_tokens = model.generate(
    **inputs, forced_bos_token_id=tokenizer.encode(tgt_lang)[1], max_length=384,
  )

  output = tokenizer.batch_decode(
    translated_tokens, skip_special_tokens=True,
  )[0]

  sys.stdout.write(output)
  sys.exit(0)

if __name__ == '__main__':
  main(*sys.argv[1:])
`;var y="./venv/nllb-200.py",w=L,v=f,K=m,e=new b({venvPath:"venv"}),z=!1,C=!1;function I(){k.existsSync(y)||k.writeFileSync(y,p,"utf8")}function A(n){if(v[n])return v[n];if(w[n])return w[n];let a=K.find(t=>t.country===n||t.iso===n);if(a)return a.flores}async function rn(n,a,t,o){e.isInitialized()||await e.init(),z||(await e.isInstalled("torch")?z=!0:await e.install("torch","--index-url","https://download.pytorch.org/whl/cu118")),C||(await e.isInstalled("transformers")?C=!0:await e.install("transformers")),I();let r=o||h[0];if(!r)throw new Error("Model not found");let i=A(n);if(!i)throw new Error(`Language not supported: ${n}`);let s=A(a);if(!s)throw new Error(`Language not supported: ${a}`);return await e.run(y,r,i,s,t)}export{A as getLang,rn as translate};
